{"remainingRequest":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\IJProjects\\Hospital\\HospitalManagerVue\\src\\views\\Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\src\\views\\Login.vue","mtime":1724663924034},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1724639415433},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1724639415083},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1724639414063},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1724639413370},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724639415614},{"path":"E:\\IJProjects\\Hospital\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1724639414622}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29kZUlucHV0IHsKICAgIHdpZHRoOiA3MCU7CiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KCi5maW5kUGFzc3dvcmQgewogICAgbWFyZ2luLXRvcDogMHB4Owp9CgoubG9naW4taW5kZXggewogICAgYmFja2dyb3VuZDogIzJiNGI2YjsKICAgIGhlaWdodDogMTAwJTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLm1pZC1pbmRleCB7CiAgICBib3gtc2hhZG93OiAwIDFweCAxMHB4IHJnYmEoMCwgMCwgMCwgLjUpLCAwIDFweCAxMHB4IHJnYmEoMCwgMCwgMCwgLjMpOwogICAgb3BhY2l0eTogMC45OwogICAgd2lkdGg6IDQ1MHB4OwogICAgaGVpZ2h0OiAzOTBweDsKICAgIGJhY2tncm91bmQ6I2YyZjlmZjsKICAgIC8v57ud5a+55a6a5L2N77yM55u45a+55LqO5pyA5bem5LiK6KeS5p2l6K+0CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiA1MCU7CiAgICB0b3A6IDUwJTsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwp9CgoubG9nby1pbmRleCB7CiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICAgIGhlaWdodDogMTMwcHg7CiAgICB3aWR0aDogMTMwcHg7CiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgLy/lrZDnu53niLbnm7gs5L2/5LiA5LiqZGl25oKs5oyC5Zyo5Y+m5LiA5LiqZGl25LiK5Lit6Ze0CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBsZWZ0OiA1MCU7CiAgICB0b3A6IDA7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKCiAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlOwogICAgYm94LXNoYWRvdzogMHB4IDBweCAxMHB4ICNkZGQ7CgogICAgaW1nIHsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgIGJhY2tncm91bmQ6ICNlZWVlZWU7CiAgICB9Cn0KCgouZWwtZm9ybS1pdGVtIHsKICAgIG1hcmdpbi1sZWZ0OiAyMHB4OwogICAgbWFyZ2luLXJpZ2h0OiAyMHB4Owp9CgovL+inkuiJsuWNlemAiQoucm9sZSB7CiAgICBtYXJnaW4tbGVmdDogOTBweDsKICAgIG1hcmdpbi1yaWdodDogOTBweDsKfQoKLy/mjInpkq4KLmJ0bnMgewogICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICAgIGhlaWdodDogMjVweDsKfQoKLy/oh6rlt7Hkv67mlLkKLmxvZ2luLWxvZ297CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIG9iamVjdC1maXQ6IGNvbnRhaW47CiAgbWFyZ2luOiAxMDBweCBhdXRvOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqbA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"login-index\" :style=\"backgroundDiv\">\n      <div style=\"height: 150px;\">\n        <img class=\"login-logo\" src=\"../assets/logo.png\" alt=\"图片无法显示\">\n      </div>\n        <div class=\"mid-index\">\n\n            <div style=\"\n                    font-weight: 700;\n                    color\n                    top: 40px;\n                    font-size: 28px;\n                    left: 20px;\n                    margin: 20px 56px;\n                \" class=\"iconfont icon-r-love\">\n                重庆大学医院管理系统\n            </div>\n            <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"ruleForm\" class=\"loginForm\">\n                <el-form-item prop=\"id\">\n                    <!--必须绑定v-model输入框才能输入字符---->\n                    <el-input v-model=\"loginForm.id\">\n                        <i slot=\"prefix\" class=\"iconfont icon-r-user1\" style=\"font-size: 22px\"></i>\n                    </el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input v-model=\"loginForm.password\" show-password>\n                        <i slot=\"prefix\" class=\"iconfont icon-r-lock\" style=\"font-size: 22px\"></i>\n                    </el-input>\n                </el-form-item>\n\n                <!-- 角色单选框 -->\n                <el-form-item class=\"role\">\n                    <el-radio-group v-model=\"role\" size=\"small\">\n                        <el-radio label=\"患者\"></el-radio>\n                        <el-radio label=\"医生\"></el-radio>\n                        <el-radio label=\"管理员\"></el-radio>\n                    </el-radio-group>\n                </el-form-item>\n\n                <el-form-item class=\"btns\">\n                    <el-button type=\"primary\" style=\"font-size: 22px; margin-left: 15px; background-color: #409ffc;\" @click=\"submitLoginForm('ruleForm')\">\n                        登录</el-button>\n                    <el-button type=\"info\" style=\"font-size: 22px; margin-left: 85px; background-color: #409ffc;\" @click=\"registerFormVisible = true\">\n                        注册新账号</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n\n        <!-- 注册对话框 -->\n        <el-dialog title=\"用户注册\" :visible.sync=\"registerFormVisible\">\n            <el-form class=\"findPassword\" :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerForm\">\n                <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n                    <el-input v-model.number=\"registerForm.pId\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" label-width=\"80px\">\n                    <el-radio v-model=\"registerForm.pGender\" label=\"男\">男</el-radio>\n                    <el-radio v-model=\"registerForm.pGender\" label=\"女\">女</el-radio>\n                </el-form-item>\n                <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n                    <el-input v-model=\"registerForm.pPassword\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n                    <el-input v-model=\"registerForm.pName\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"出生日期\" label-width=\"80px\" prop=\"pBirthday\">\n                    <el-date-picker v-model=\"registerForm.pBirthday\" type=\"date\" placeholder=\"选择日期\"\n                        value-format=\"yyyy-MM-dd\">\n                    </el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n                    <el-input v-model=\"registerForm.pPhone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" label-width=\"80px\" prop=\"pEmail\">\n                    <el-input v-model=\"registerForm.pEmail\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n                    <el-input v-model=\"registerForm.pCard\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"registerFormVisible = false\" style=\"font-size: 18px\">\n                    取 消</el-button>\n                <el-button type=\"primary\" @click=\"registerClick('registerForm')\" style=\"font-size: 18px\">\n                    确 定</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\n\n\nexport default {\n    name: \"Login\",\n    data() {\n        var validateMoblie = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入手机号\"));\n            } else {\n                let reg =\n                    /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,8,9])\\d{8}$/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的手机号\"));\n                }\n                callback();\n            }\n        };\n        var validateCard = (rule, value, callback) => {\n            if (value === undefined) {\n                callback(new Error(\"请输入身份证号\"));\n            } else {\n                let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n                if (!reg.test(value)) {\n                    callback(new Error(\"请输入合法的身份证号码\"));\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请输入密码\"));\n            } else {\n                if (this.findForm.checkPassword !== \"\") {\n                    this.$refs.findForm.validateField(\"checkPassword\");\n                }\n                callback();\n            }\n        };\n        var validatePass2 = (rule, value, callback) => {\n            if (value === \"\") {\n                callback(new Error(\"请再次输入密码\"));\n            } else if (value !== this.findForm.newPassword) {\n                callback(new Error(\"两次输入密码不一致!\"));\n            } else {\n                callback();\n            }\n        };\n        return {\n            //背景图片\n            backgroundDiv: {\n                backgroundImage:\n                    \"url(\" + require(\"../assets/doctor.jpeg\") + \")\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"100% 100%\",\n            },\n            loginForm: {\n                id: \"\",\n                password: \"\",\n            },\n            loginRules: {\n                id: [\n                    {\n                        required: true,\n                        message: \"请输入账号编号\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        min: 3,\n                        max: 50,\n                        message: \"长度在 3到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                ],\n            },\n            role: \"患者\",\n            findRole: \"患者\",\n            //找回密码\n            findFormVisible: false,\n            findForm: {\n                code: \"\",\n                newPassword: \"\",\n                checkPassword: \"\",\n                pEmail: \"\",\n            },\n\n            findRules: {\n                pEmail: [\n                    {\n                        required: true,\n                        message: \"请输入邮箱地址\",\n                        trigger: \"blur\",\n                    },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                code: [\n                    {\n                        required: true,\n                        message: \"请输入验证码\",\n                        trigger: \"blur\",\n                    },\n                ],\n                newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n                checkPassword: [{ validator: validatePass2, trigger: \"blur\" }],\n            },\n            totalTime: 60,\n            content: \"发送验证码\",\n            canClick: true,\n            //注册\n            registerFormVisible: false,\n            registerForm: {\n                pGender: \"男\",\n            },\n            registerRules: {\n                pId: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                    {\n                        type: \"number\",\n                        message: \"账号必须数字类型\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pPassword: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    {\n                        min: 4,\n                        max: 50,\n                        message: \"长度在 4到 50 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pName: [\n                    { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n                    {\n                        min: 2,\n                        max: 8,\n                        message: \"长度在 2到 8 个字符\",\n                        trigger: \"blur\",\n                    },\n                ],\n                pEmail: [\n                    { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n                    {\n                        type: \"email\",\n                        message: \"请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"],\n                    },\n                ],\n                pPhone: [{ validator: validateMoblie }],\n                pCard: [{ validator: validateCard }],\n                pBirthday: [\n                    {\n                        required: true,\n                        message: \"选择出生日期\",\n                        trigger: \"blur\",\n                    },\n                ],\n            },\n        };\n    },\n    mounted() {\n\n    },\n    methods: {\n        //点击注册确认按钮\n        registerClick(formName) {\n            if (!/^\\d+$/.test(this.registerForm.pId)) {\n                this.$message.error(\"账号有误，只能是纯数字，且长度不能超过9位。\");\n                return;\n            }\n            if ((this.registerForm.pId + \"\").length > 9) {\n                this.$message.error(\n                    \"账号不能超过9位！\"\n                );\n                return\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    request\n                        .get(\"patient/addPatient\", {\n                            params: {\n                                pId: this.registerForm.pId,\n                                pName: this.registerForm.pName,\n                                pPassword: this.registerForm.pPassword,\n                                pGender: this.registerForm.pGender,\n                                pEmail: this.registerForm.pEmail,\n                                pPhone: this.registerForm.pPhone,\n                                pCard: this.registerForm.pCard,\n                                pBirthday: this.registerForm.pBirthday,\n                            },\n                        })\n                        .then((res) => {\n                            if (res.data.status !== 200)\n                                return this.$message.error(\n                                    \"账号或邮箱已被占用！\"\n                                );\n                            this.registerFormVisible = false;\n                            this.$message.success(\"注册成功！\");\n                            console.log(res);\n                        });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //提交表单\n        submitLoginForm(formName) {\n            if (!/^\\d+$/.test(this.loginForm.id)) {\n                this.$message.error(\"账号有误，只能是纯数字\");\n                return;\n            }\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    if (this.role === \"管理员\") {\n                        var params = new URLSearchParams();\n                        params.append(\"aId\", this.loginForm.id);\n                        params.append(\"aPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"admin/login\", params)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/adminLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"医生\") {\n                        var params1 = new URLSearchParams();\n                        params1.append(\"dId\", this.loginForm.id);\n                        params1.append(\"dPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"doctor/login\", params1)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/doctorLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                    if (this.role === \"患者\") {\n                        var params2 = new URLSearchParams();\n                        params2.append(\"pId\", this.loginForm.id);\n                        params2.append(\"pPassword\", this.loginForm.password);\n\n                        request\n                            .post(\"patient/login\", params2)\n                            .then((res) => {\n                                console.log(res);\n                                if (res.data.status != 200)\n                                    return this.$message.error(\n                                        \"用户名或密码错误\"\n                                    );\n                                setToken(res.data.data.token);\n                                this.$router.push(\"/patientLayout\");\n                            })\n                            .catch((e) => {\n                                console.log(e);\n                                if (\n                                    e.response == undefined ||\n                                    e.response.data == undefined\n                                ) {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                } else {\n                                    this.$message({\n                                        showClose: true,\n                                        message: e.response.data,\n                                        type: \"error\",\n                                        duration: 5000,\n                                    });\n                                }\n                            });\n                    }\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n    }\n};\n</script>\n\n<style lang=\"scss\">\n.codeInput {\n    width: 70%;\n    margin-right: 10px;\n}\n\n.findPassword {\n    margin-top: 0px;\n}\n\n.login-index {\n    background: #2b4b6b;\n    height: 100%;\n    position: relative;\n}\n\n.mid-index {\n    box-shadow: 0 1px 10px rgba(0, 0, 0, .5), 0 1px 10px rgba(0, 0, 0, .3);\n    opacity: 0.9;\n    width: 450px;\n    height: 390px;\n    background:#f2f9ff;\n    //绝对定位，相对于最左上角来说\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.logo-index {\n    background: white;\n    height: 130px;\n    width: 130px;\n    border-radius: 50%;\n    padding: 10px;\n    //子绝父相,使一个div悬挂在另一个div上中间\n    position: absolute;\n    left: 50%;\n    top: 0;\n    transform: translate(-50%, -50%);\n\n    border: 1px solid #eee;\n    box-shadow: 0px 0px 10px #ddd;\n\n    img {\n        height: 100%;\n        width: 100%;\n        border-radius: 50%;\n        background: #eeeeee;\n    }\n}\n\n\n.el-form-item {\n    margin-left: 20px;\n    margin-right: 20px;\n}\n\n//角色单选\n.role {\n    margin-left: 90px;\n    margin-right: 90px;\n}\n\n//按钮\n.btns {\n    justify-content: flex-end;\n    height: 25px;\n}\n\n//自己修改\n.login-logo{\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  margin: 100px auto;\n}\n</style>\n"]}]}